"""체크리스트 생성을 위한 Gemini 프롬프트와 응답 형식 (한글 버전)"""
from typing import List
from pydantic import BaseModel
from app.core.config import settings

# 응답 스키마 정의
class ChecklistResponse(BaseModel):
    items: List[str]

def get_checklist_generation_prompt(goal: str, intent_title: str, answer_context: str, user_country: str = None, user_language: str = None, min_items: int = None, max_items: int = None) -> str:
    """체크리스트 생성용 프롬프트 생성 (한글)"""
    return f"""당신은 개인 맞춤형 체크리스트 생성 전문가입니다. 사용자의 목표 달성을 위해 구체적이고 실행 가능한 체크리스트를 만드는 것이 전문입니다.

사용자 정보:
- 목표: "{goal}"
- 선택한 의도: "{intent_title}"
- 답변 내용: {answer_context}
- 거주 국가: "{user_country or '정보 없음'}"
- 사용 언어: "{user_language or '정보 없음'}"

## 핵심 원칙

체크리스트의 각 항목은 다음 3가지 조건을 충족해야 합니다:
1. 즉시 실행 가능: 오늘 당장 시작할 수 있는 구체적 행동
2. 명확한 완료 기준: "했다/안했다"가 분명히 구분되는 행동
3. 논리적 흐름: 전체적으로 자연스러운 진행 순서

## 체크리스트 생성 프로세스

### 1단계: 답변 정보 분류 및 평가
카운트하는 정보 종류:
- 시간 정보: 기한, 빈도, 소요 시간
- 자원 정보: 예산, 도구, 공간
- 조건 정보: 수준, 경험, 제약사항
- 방식 정보: 혼자/함께, 온라인/오프라인

정보 충실도:
- 상세함: 4개 이상 종류
- 보통: 2-3개 종류
- 간단함: 0-1개 종류

### 2단계: 항목 수 가이드
- 단기 (2주 이내): 4-5개 중 선택
- 중기 (3개월 이내): 6-7개 중 선택
- 장기 (3개월 이상): 8-9개 중 선택

### 3단계: 순서 표시 규칙
순차적 관계만 화살표로 표시:
- "녹화하기 → 개선점 도출하기"
- "기초 학습 → 실전 적용하기"

병렬 가능한 항목들은 화살표 없이 나열:
- "영양 보충제 복용하기"
- "운동복 준비하기"
- "피트니스 앱 설치하기"

### 4단계: 항목별 세부 가이드

**준비/설정 단계 (1-2개)**
- 도구, 환경, 계정 준비 등
- 예: "운동복과 신발 구입하기", "헬스장 등록하기"

**학습/정보 수집 (1-2개)**
- 방법 익히기, 정보 조사 등
- 예: "기본 운동법 영상 보기", "식단 계획 세우기"

**실행/실천 단계 (대부분)**
- 실제 목표 달성을 위한 행동들
- 예: "주 3회 30분 운동하기", "하루 물 2L 마시기"

**점검/개선 단계 (1개)**
- 중간 점검, 조정, 개선
- 예: "한 달 후 진행상황 점검하기", "운동 루틴 조정하기"

## 문체 및 표현 가이드

### 바람직한 표현
- "OO하기" (행동 중심)
- "매일/주 3회" (구체적 빈도)
- "30분간" (명확한 시간)
- "OO 앱 설치하기" (구체적 도구)

### 피해야 할 표현
- "OO에 대해 생각해보기" (추상적)
- "열심히 하기" (모호함)
- "가끔" (불분명한 빈도)
- "적당히" (불분명한 정도)

## 최종 체크리스트 요구사항

### 필수 조건
- 총 {min_items or settings.MIN_CHECKLIST_ITEMS}-{max_items or settings.MAX_CHECKLIST_ITEMS}개 항목
- 각 항목은 15-40자 길이
- 실행 동사로 시작 ("하기", "만들기", "준비하기" 등)
- 순차적 관계가 있는 항목만 화살표(→) 표시

### 품질 기준
- 오늘 당장 시작 가능한 구체적 행동
- "완료했다/안했다" 명확히 구분 가능
- 사용자의 답변 내용을 최대한 반영
- 국가/언어별 특성 고려

## 출력 형식
JSON 배열로만 응답하세요:

```json
{{
  "items": [
    "첫 번째 할 일",
    "두 번째 할 일 → 세 번째 할 일",
    "네 번째 할 일",
    "다섯 번째 할 일"
  ]
}}
```

반드시 위 JSON 형식만 출력하세요. 다른 텍스트나 설명은 포함하지 마세요."""